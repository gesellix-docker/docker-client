buildscript {
    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
    }

    dependencies {
//        classpath 'net.saliman:gradle-cobertura-plugin:2.4.0'
//        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.1'

        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

apply plugin: 'groovy'

apply plugin: 'jacoco'
//apply plugin: 'net.saliman.cobertura'
//apply plugin: 'com.github.kt3k.coveralls'

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

dependencies {
    compile 'de.gesellix:docker-engine:2017-10-07T21-06-42'
    compile 'de.gesellix:docker-compose:2017-10-05T22-41-04'

    compile 'org.codehaus.groovy:groovy:2.4.12'
    compile 'org.codehaus.groovy:groovy-json:2.4.12'

    compile 'org.slf4j:slf4j-api:1.7.25'
    testCompile 'ch.qos.logback:logback-classic:1.2.3'

    compile 'com.squareup.okio:okio:1.13.0'
    compile 'com.squareup.okhttp3:okhttp:3.9.0'
    testCompile 'com.squareup.okhttp3:mockwebserver:3.9.0'

    compile 'org.apache.commons:commons-compress:1.14'

    compile 'org.bouncycastle:bcpkix-jdk15on:1.58'

    testCompile 'de.gesellix:testutil:2017-10-07T20-41-30'

    testCompile('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude module: 'groovy-all'
    }
    testCompile 'cglib:cglib-nodep:3.2.5'

    testCompile 'commons-lang:commons-lang:2.6'
}

task sourcesJar(type: Jar) {
    dependsOn classes
    classifier 'sources'
    from sourceSets.main.allSource
}

test {
    // minimal way of providing a special environment variable for the EnvFileParserTest
    environment "A_KNOWN_VARIABLE", "my value"
}

//cobertura {
//    coverageSourceDirs = sourceSets.main.groovy.srcDirs
//    coverageFormats = ['html', 'xml']
//}

jacocoTestReport.reports {
    xml.enabled = true
    html.enabled = true
}

artifacts {
    archives sourcesJar
}

install {
    repositories.mavenInstaller {
        pom.groupId = 'de.gesellix'
        pom.artifactId = 'docker-client'
        pom.version = '1.0.0-SNAPSHOT'
    }
}

publishing {
    publications {
        dockerClient(MavenPublication) {
            artifactId 'docker-client'
            version artifactVersion
            from components.java
            artifact sourcesJar
        }
    }
}

bintray {
    user = System.env.BINTRAY_USER ?: project["bintray.user"]
    key = System.env.BINTRAY_API_KEY ?: project["bintray.key"]
    publications = ['dockerClient']
    pkg {
        repo = 'docker-utils'
        name = 'docker-client'
        desc = 'A Docker client for the JVM written in Groovy'
        licenses = ['Apache-2.0']
        labels = ['docker', 'engine api', 'remote api', 'client', 'java', 'groovy']
        version = [
                name: artifactVersion
        ]
        vcsUrl = 'https://github.com/gesellix/docker-client.git'
    }
    dryRun = bintrayDryRun
}
bintrayUpload.dependsOn build
